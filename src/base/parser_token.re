type t = Parser.token;

let info = (t: t): Parse_info.t =>
  switch (t) {
  | TYPE(ii) => ii
  | INTERFACE(ii) => ii
  | ARRAY(ii) => ii
  | ARRAY_SHORT(ii) => ii
  | ENUM(ii) => ii
  | EXTENDS(ii) => ii
  | READONLY(ii) => ii
  | IMPORT(ii) => ii
  | EXPORT(ii) => ii
  | DEFAULT(ii) => ii
  | FROM(ii) => ii
  | AS(ii) => ii
  | IN(ii) => ii
  | DECLARE(ii) => ii
  | FALSE(ii) => ii
  | TRUE(ii) => ii
  | INSTANCEOF(ii) => ii
  | TYPEOF(ii) => ii
  | KEYOF(ii) => ii
  | THIS(ii) => ii
  | VAR(ii) => ii
  | LET(ii) => ii
  | CONST(ii) => ii
  | FUNCTION(ii) => ii
  | NAMESPACE(ii) => ii
  | MODULE(ii) => ii
  | UNKNOWN(ii) => ii
  | PUBLIC(ii) => ii
  | PROTECTED(ii) => ii
  | PRIVATE(ii) => ii
  | SYMBOL(ii) => ii
  | NEW(ii) => ii
  | CLASS(ii) => ii
  | IMPLEMENTS(ii) => ii
  | CONSTRUCTOR(ii) => ii
  | STATIC(ii) => ii
  | PRIM_STRING(ii) => ii
  | PRIM_NUMBER(ii) => ii
  | PRIM_BOOLEAN(ii) => ii
  | PRIM_NULL(ii) => ii
  | PRIM_UNDEFINED(ii) => ii
  | PRIM_VOID(ii) => ii
  | PRIM_ANY(ii) => ii
  | EQUALS(ii) => ii
  | QMARK(ii) => ii
  | DOT(ii) => ii
  | AMPERSAND(ii) => ii
  | STAR(ii) => ii
  | PIPE(ii) => ii
  | ARROW(ii) => ii
  | LCURLY(ii) => ii
  | RCURLY(ii) => ii
  | LPAREN(ii) => ii
  | RPAREN(ii) => ii
  | LBRACKET(ii) => ii
  | RBRACKET(ii) => ii
  | LT(ii) => ii
  | GT(ii) => ii
  | PLUS(ii) => ii
  | MINUS(ii) => ii
  | SEMICOLON(ii) => ii
  | VIRTUAL_SEMICOLON(ii) => ii
  | COLON(ii) => ii
  | COMMA(ii) => ii
  | ELLIPSIS(ii) => ii
  | EOF(ii) => ii
  | OTHER((_, ii)) => ii
  | COMMENT((_, ii)) => ii
  | COMMENT_LINE((_, ii)) => ii
  | IDENT((_, ii)) => ii
  | STRING((_, ii, _)) => ii
  | NUMBER((_, ii)) => ii
  | TRIPLESLASH((_, ii)) => ii
  };
